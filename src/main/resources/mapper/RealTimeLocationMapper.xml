<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jtzh.mapper.RealTimeLocationMapper">
    <resultMap id="BaseResultMap" type="com.jtzh.entity.RealTimeLocation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="ID" jdbcType="BIGINT" property="ID"/>
        <result column="UserID" jdbcType="BIGINT" property="userID"/>
        <result column="Lon" jdbcType="DOUBLE" property="lon"/>
        <result column="Lat" jdbcType="DOUBLE" property="lat"/>
        <result column="Moment" jdbcType="TIMESTAMP" property="moment"/>
    </resultMap>
    <resultMap id="RealTimeLocationVO" type="com.jtzh.vo.gis.RealTimeLocationVO">
        <id column="ID" jdbcType="BIGINT" property="ID"/>
        <result column="UserID" jdbcType="BIGINT" property="userID"/>
        <result column="Lon" jdbcType="DOUBLE" property="lon"/>
        <result column="Lat" jdbcType="DOUBLE" property="lat"/>
        <result column="Moment" jdbcType="TIMESTAMP" property="moment"/>
        <result column="NetGridID" jdbcType="BIGINT" property="netGridID"/>
        <result column="MemberName" jdbcType="VARCHAR" property="memberName"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from TERealTimeLocation
        where ID = #{ID,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.jtzh.entity.RealTimeLocation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into TERealTimeLocation (ID, UserID, Lon,
        Lat, Moment)
        values (#{ID,jdbcType=BIGINT}, #{userID,jdbcType=BIGINT}, #{lon,jdbcType=DOUBLE},
        #{lat,jdbcType=DOUBLE}, #{moment,jdbcType=TIMESTAMP})
    </insert>
    <insert id="addRealTimeLocation" parameterType="com.jtzh.entity.RealTimeLocation">
    insert into TERealTimeLocation (UserID, Lon,
      Lat, Moment)
    values (#{userID,jdbcType=BIGINT}, #{lon,jdbcType=DOUBLE},
      #{lat,jdbcType=DOUBLE}, #{moment,jdbcType=TIMESTAMP})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.jtzh.entity.RealTimeLocation">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update TERealTimeLocation
        set UserID = #{userID,jdbcType=BIGINT},
        Lon = #{lon,jdbcType=DOUBLE},
        Lat = #{lat,jdbcType=DOUBLE},
        Moment = #{moment,jdbcType=TIMESTAMP}
        where ID = #{ID,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select ID, UserID, Lon, Lat, Moment
        from TERealTimeLocation
        where UserID = #{UserID,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select ID, UserID, Lon, Lat, Moment
        from TERealTimeLocation
    </select>
    <select id="getRealTimeLocation" resultMap="RealTimeLocationVO">
        SELECT
        t1.ID,
        t1.UserID,
        t1.Lon,
        t1.Lat,
        t1.Moment,
        t2.NetGridID,
        CONCAT( t3.NetGridName, '->', t2.NetGridName ) MemberName
        FROM
        TERealTimeLocation t1
        LEFT JOIN TENetGrid t2 ON t1.UserID = t2.NetGridID
        LEFT JOIN TENetGrid t3 on t2.FatherNetGridID = t3.NetGridID
        WHERE
        1=1
        <if test="netGridID!=null and netGridID!=0">
            and ( t2.NetGridID = #{netGridID} OR t3.FatherNetGridID = #{netGridID})
        </if>
    </select>
</mapper>