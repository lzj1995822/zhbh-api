<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jtzh.mapper.LoginUserTestMapper">
	<resultMap id="BaseResultMap" type="com.jtzh.entity.LoginUserTest">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="login_id" property="loginId" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="CHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_id" property="createId" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="yhzh" property="yhzh" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, login_id, type, create_time, create_id,
		password, yhzh
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from login_user_test
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		login_user_test
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.jtzh.entity.LoginUserTest">
		insert into login_user_test
		(id, user_name, login_id,
		type, create_time, create_id,
		password, yhzh)
		values (#{id,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR},
		#{loginId,jdbcType=VARCHAR},
		#{type,jdbcType=CHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{createId,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{yhzh,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jtzh.entity.LoginUserTest">
		insert into login_user_test
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="loginId != null">
				login_id,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createId != null">
				create_id,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="yhzh != null">
				yhzh,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="loginId != null">
				#{loginId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				#{createId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="yhzh != null">
				#{yhzh,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jtzh.entity.LoginUserTest">
		update login_user_test
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="loginId != null">
				login_id = #{loginId,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createId != null">
				create_id = #{createId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="yhzh != null">
				yhzh = #{yhzh,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jtzh.entity.LoginUserTest">
		update
		login_user_test
		set user_name = #{userName,jdbcType=VARCHAR},
		login_id =
		#{loginId,jdbcType=VARCHAR},
		type = #{type,jdbcType=CHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		create_id =
		#{createId,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		yhzh = #{yhzh,jdbcType=VARCHAR}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<select id="getTestUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from login_user_test
		where login_id = #{loginId} and delflag != 'D'
	</select>
</mapper>