<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jtzh.mapper.PworkUserMapper">
	<resultMap id="BaseResultMap" type="com.jtzh.entity.PworkUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="dep_name" property="depName" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="CHAR" />
		<result column="user_sex" property="userSex" jdbcType="CHAR" />
		<result column="user_age" property="userAge" jdbcType="CHAR" />
		<result column="user_position" property="userPosition"
			jdbcType="VARCHAR" />
		<result column="user_industry" property="userIndustry"
			jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="delflag" property="delflag" jdbcType="CHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="user_number" property="userNumber" jdbcType="VARCHAR" />
		<result column="user_phone_number" property="userPhoneNumber" jdbcType="VARCHAR" />
		<result column="yhzh" property="yhzh" jdbcType="VARCHAR" />
		<result column="create_id" property="createId"
			jdbcType="VARCHAR" />
		<result column="user_identity" property="userIdentity" jdbcType="VARCHAR" />
		<result column="user_nation" property="userNation" jdbcType="VARCHAR" />
		<result column="user_address" property="userAddress" jdbcType="VARCHAR" />
		<result column="user_x" property="userX" jdbcType="VARCHAR" />
		<result column="user_y" property="userY" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, dep_name, user_name, user_sex, user_age, user_position,
		user_industry, remark, delflag, create_time, password, 
		user_number, user_phone_number, yhzh, create_id,
		user_identity,user_nation,user_address,user_x,user_y
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from pwork_user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		pwork_user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.jtzh.entity.PworkUser">
		insert into pwork_user (id,
		dep_name, user_name,
		user_sex, user_age, user_position,
		user_industry,
		remark, delflag,
		create_time, password, user_number,
		user_phone_number, yhzh, create_id,
		user_identity,user_nation,user_address,user_x,user_y)
		values (#{id,jdbcType=INTEGER},
		#{depName,jdbcType=VARCHAR},
		#{userName,jdbcType=CHAR},
		#{userSex,jdbcType=CHAR}, #{userAge,jdbcType=CHAR},
		#{userPosition,jdbcType=VARCHAR},
		#{userIndustry,jdbcType=VARCHAR},
		#{remark,jdbcType=VARCHAR},
		#{delflag,jdbcType=CHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{password,jdbcType=VARCHAR},
		#{userNumber,jdbcType=VARCHAR},#{userPhoneNumber,jdbcType=VARCHAR}, 
		#{yhzh,jdbcType=VARCHAR},#{createId,jdbcType=VARCHAR},
		#{userIdentity,jdbcType=VARCHAR},#{userNation,jdbcType=VARCHAR},
		#{userAddress,jdbcType=VARCHAR},#{userX,jdbcType=VARCHAR},
		#{userY,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.jtzh.entity.PworkUser">
		insert into pwork_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="depName != null">
				dep_name,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userSex != null">
				user_sex,
			</if>
			<if test="userAge != null">
				user_age,
			</if>
			<if test="userPosition != null">
				user_position,
			</if>
			<if test="userIndustry != null">
				user_industry,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="delflag != null">
				delflag,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="userNumber != null">
				user_number,
			</if>
			<if test="userPhoneNumber != null">
				user_phone_number,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="depName != null">
				#{depName,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=CHAR},
			</if>
			<if test="userSex != null">
				#{userSex,jdbcType=CHAR},
			</if>
			<if test="userAge != null">
				#{userAge,jdbcType=CHAR},
			</if>
			<if test="userPosition != null">
				#{userPosition,jdbcType=VARCHAR},
			</if>
			<if test="userIndustry != null">
				#{userIndustry,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="delflag != null">
				#{delflag,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="userNumber != null">
				#{userNumber,jdbcType=VARCHAR},
			</if>
			<if test="userPhoneNumber != null">
				#{userPhoneNumber,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.jtzh.entity.PworkUser">
		update pwork_user
		<set>
			<if test="depName != null">
				dep_name = #{depName,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=CHAR},
			</if>
			<if test="userSex != null">
				user_sex = #{userSex,jdbcType=CHAR},
			</if>
			<if test="userAge != null">
				user_age = #{userAge,jdbcType=CHAR},
			</if>
			<if test="userPosition != null">
				user_position = #{userPosition,jdbcType=VARCHAR},
			</if>
			<if test="userIndustry != null">
				user_industry = #{userIndustry,jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="delflag != null">
				delflag = #{delflag,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="userNumber != null">
				user_number = #{userNumber,jdbcType=VARCHAR},
			</if>
			<if test="userPhoneNumber != null">
				user_phone_number = #{userPhoneNumber,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.jtzh.entity.PworkUser">
		update pwork_user
		set dep_name = #{depName,jdbcType=VARCHAR},
		user_name =
		#{userName,jdbcType=CHAR},
		user_sex = #{userSex,jdbcType=CHAR},
		user_age = #{userAge,jdbcType=CHAR},
		user_position =
		#{userPosition,jdbcType=VARCHAR},
		user_industry =
		#{userIndustry,jdbcType=VARCHAR},
		remark = #{remark,jdbcType=VARCHAR},
		delflag = #{delflag,jdbcType=CHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		password =
		#{password,jdbcType=VARCHAR},
		user_number =
		#{userNumber,jdbcType=VARCHAR},
		user_phone_number =
		#{userPhoneNumber,jdbcType=VARCHAR},
		yhzh =
		#{yhzh,jdbcType=VARCHAR},
		create_id =
		#{createId,jdbcType=VARCHAR},
		user_identity =
		#{userIdentity,jdbcType=VARCHAR},
		user_nation =
		#{userNation,jdbcType=VARCHAR},
		user_address =
		#{userAddress,jdbcType=VARCHAR},
		user_x =
		#{userX,jdbcType=VARCHAR},
		user_y =
		#{userY,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectTotal" parameterType="com.jtzh.pojo.UserPagination"
		resultType="java.lang.Integer">
		select count(1)
		from pwork_user
		where delflag != 'D'
		<if test="page.key != null and page.key != ''">
			and (dep_name like concat('%', #{page.key},'%')
			or user_name like concat('%', #{page.key},'%')
			or user_sex like concat('%', #{page.key},'%')
			or user_age like concat('%', #{page.key},'%')
			or user_position like concat('%', #{page.key},'%')
			or user_industry like concat('%', #{page.key},'%')
			or remark like concat('%', #{page.key},'%')
			or user_identity like concat('%', #{page.key},'%')
			or user_nation like concat('%', #{page.key},'%')
			or user_address like concat('%', #{page.key},'%')
			or user_x like concat('%', #{page.key},'%')
			or user_y like concat('%', #{page.key},'%')
			)
		</if>
		<if test="page.startTime != null and page.startTime != ''">
			and create_time &gt; #{page.startTime}
		</if>
		<if test="page.endTime != null and page.endTime != ''">
			and create_time &lt; #{page.endTime}
		</if>
		<if test="page.yhzh != null and page.yhzh != ''">
			and yhzh like concat('%', #{page.yhzh},
			'%')
		</if>
		<if test="page.createId != null and page.createId != ''">
			and create_id like concat('%', #{page.createId},
			'%')
		</if>
	</select>
	<select id="selectInfo" parameterType="com.jtzh.pojo.UserPagination"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from pwork_user
		where delflag != 'D'
		<if test="page.key != null and page.key != ''">
			and (dep_name like concat('%', #{page.key},'%')
			or user_name like concat('%', #{page.key},'%')
			or user_sex like concat('%', #{page.key},'%')
			or user_age like concat('%', #{page.key},'%')
			or user_position like concat('%', #{page.key},'%')
			or user_industry like concat('%', #{page.key},'%')
			or remark like concat('%', #{page.key},'%')
			or user_identity like concat('%', #{page.key},'%')
			or user_nation like concat('%', #{page.key},'%')
			or user_address like concat('%', #{page.key},'%')
			or user_x like concat('%', #{page.key},'%')
			or user_y like concat('%', #{page.key},'%')
			)
		</if>
		<if test="page.startTime != null and page.startTime != ''">
			and create_time &gt; #{page.startTime}
		</if>
		<if test="page.endTime != null and page.endTime != ''">
			and create_time &lt; #{page.endTime}
		</if>
		<if test="page.yhzh != null and page.yhzh != ''">
			and yhzh like concat('%', #{page.yhzh},
			'%')
		</if>
		<if test="page.createId != null and page.createId != ''">
			and create_id like concat('%', #{page.createId},
			'%')
		</if>
		order by create_time desc
		limit
		#{page.start},#{page.pageSize}
	</select>
	<select id="selectUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from pwork_user
		where id = #{id}
	</select>
	<update id="deleteUser">
		update pwork_user
		set
		delflag = 'D'
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="getUserList" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from pwork_user
		where delflag != 'D'
		order by id asc
	</select>
</mapper>